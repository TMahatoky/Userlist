{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateMiddlewareGeneratorFromRuleTree = void 0;\n\nconst graphql_1 = require(\"graphql\");\n\nconst utils_1 = require(\"./utils\");\n\nconst validation_1 = require(\"./validation\");\n/**\n *\n * @param options\n *\n * Generates a middleware function from a given rule and\n * initializes the cache object in context.\n *\n */\n\n\nfunction generateFieldMiddlewareFromRule(rule, options) {\n  async function middleware(resolve, parent, args, ctx, info) {\n    // Cache\n    if (!ctx) {\n      ctx = {};\n    }\n\n    if (!ctx._shield) {\n      ctx._shield = {\n        cache: {}\n      };\n    } // Execution\n\n\n    try {\n      const res = await rule.resolve(parent, args, ctx, info, options);\n\n      if (res === true) {\n        return await resolve(parent, args, ctx, info);\n      } else if (res === false) {\n        if (typeof options.fallbackError === 'function') {\n          return await options.fallbackError(null, parent, args, ctx, info);\n        }\n\n        return options.fallbackError;\n      } else {\n        return res;\n      }\n    } catch (err) {\n      if (options.debug) {\n        throw err;\n      } else if (options.allowExternalErrors) {\n        return err;\n      } else {\n        if (typeof options.fallbackError === 'function') {\n          return await options.fallbackError(err, parent, args, ctx, info);\n        }\n\n        return options.fallbackError;\n      }\n    }\n  }\n\n  if (utils_1.isRule(rule) && rule.extractFragment()) {\n    return {\n      fragment: rule.extractFragment(),\n      resolve: middleware\n    };\n  }\n\n  if (utils_1.isLogicRule(rule)) {\n    return {\n      fragments: rule.extractFragments(),\n      resolve: middleware\n    };\n  }\n\n  return middleware;\n}\n/**\n *\n * @param type\n * @param rules\n * @param options\n *\n * Generates middleware from rule for a particular type.\n *\n */\n\n\nfunction applyRuleToType(type, rules, options) {\n  if (utils_1.isRuleFunction(rules)) {\n    /* Apply defined rule function to every field */\n    const fieldMap = type.getFields();\n    const middleware = Object.keys(fieldMap).reduce((middleware, field) => {\n      return Object.assign(Object.assign({}, middleware), {\n        [field]: generateFieldMiddlewareFromRule(rules, options)\n      });\n    }, {});\n    return middleware;\n  } else if (utils_1.isRuleFieldMap(rules)) {\n    /* Apply rules assigned to each field to each field */\n    const fieldMap = type.getFields();\n    /* Extract default type wildcard if any and remove it for validation */\n\n    const defaultTypeRule = rules['*'];\n    delete rules['*'];\n    /* Validation */\n\n    const fieldErrors = Object.keys(rules).filter(type => !Object.prototype.hasOwnProperty.call(fieldMap, type)).map(field => `${type.name}.${field}`).join(', ');\n\n    if (fieldErrors.length > 0) {\n      throw new validation_1.ValidationError(`It seems like you have applied rules to ${fieldErrors} fields but Shield cannot find them in your schema.`);\n    }\n    /* Generation */\n\n\n    const middleware = Object.keys(fieldMap).reduce((middleware, field) => Object.assign(Object.assign({}, middleware), {\n      [field]: generateFieldMiddlewareFromRule(utils_1.withDefault(defaultTypeRule || options.fallbackRule)(rules[field]), options)\n    }), {});\n    return middleware;\n  } else {\n    /* Apply fallbackRule to type with no defined rule */\n    const fieldMap = type.getFields();\n    const middleware = Object.keys(fieldMap).reduce((middleware, field) => Object.assign(Object.assign({}, middleware), {\n      [field]: generateFieldMiddlewareFromRule(options.fallbackRule, options)\n    }), {});\n    return middleware;\n  }\n}\n/**\n *\n * @param schema\n * @param rule\n * @param options\n *\n * Applies the same rule over entire schema.\n *\n */\n\n\nfunction applyRuleToSchema(schema, rule, options) {\n  const typeMap = schema.getTypeMap();\n  const middleware = Object.keys(typeMap).filter(type => !graphql_1.isIntrospectionType(typeMap[type])).reduce((middleware, typeName) => {\n    const type = typeMap[typeName];\n\n    if (graphql_1.isObjectType(type)) {\n      return Object.assign(Object.assign({}, middleware), {\n        [typeName]: applyRuleToType(type, rule, options)\n      });\n    } else {\n      return middleware;\n    }\n  }, {});\n  return middleware;\n}\n/**\n *\n * @param rules\n * @param wrapper\n *\n * Converts rule tree to middleware.\n *\n */\n\n\nfunction generateMiddlewareFromSchemaAndRuleTree(schema, rules, options) {\n  if (utils_1.isRuleFunction(rules)) {\n    /* Applies rule to entire schema. */\n    return applyRuleToSchema(schema, rules, options);\n  } else {\n    /**\n     * Checks type map and field map and applies rules\n     * to particular fields.\n     */\n    const typeMap = schema.getTypeMap();\n    /* Validation */\n\n    const typeErrors = Object.keys(rules).filter(type => !Object.prototype.hasOwnProperty.call(typeMap, type)).join(', ');\n\n    if (typeErrors.length > 0) {\n      throw new validation_1.ValidationError(`It seems like you have applied rules to ${typeErrors} types but Shield cannot find them in your schema.`);\n    } // Generation\n\n\n    const middleware = Object.keys(typeMap).filter(type => !graphql_1.isIntrospectionType(typeMap[type])).reduce((middleware, typeName) => {\n      const type = typeMap[typeName];\n\n      if (graphql_1.isObjectType(type)) {\n        return Object.assign(Object.assign({}, middleware), {\n          [typeName]: applyRuleToType(type, rules[typeName], options)\n        });\n      } else {\n        return middleware;\n      }\n    }, {});\n    return middleware;\n  }\n}\n/**\n *\n * @param ruleTree\n * @param options\n *\n * Generates middleware from given rules.\n *\n */\n\n\nfunction generateMiddlewareGeneratorFromRuleTree(ruleTree, options) {\n  return schema => generateMiddlewareFromSchemaAndRuleTree(schema, ruleTree, options);\n}\n\nexports.generateMiddlewareGeneratorFromRuleTree = generateMiddlewareGeneratorFromRuleTree;","map":{"version":3,"mappings":"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","names":["generateFieldMiddlewareFromRule","rule","options","middleware","resolve","parent","args","ctx","info","_shield","cache","res","fallbackError","err","debug","allowExternalErrors","utils_1","extractFragment","fragment","fragments","extractFragments","applyRuleToType","type","rules","fieldMap","getFields","Object","keys","reduce","field","defaultTypeRule","fieldErrors","filter","prototype","hasOwnProperty","call","map","name","join","length","validation_1","fallbackRule","applyRuleToSchema","schema","typeMap","getTypeMap","graphql_1","typeName","generateMiddlewareFromSchemaAndRuleTree","typeErrors","generateMiddlewareGeneratorFromRuleTree","ruleTree","exports"],"sources":["../src/generator.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}