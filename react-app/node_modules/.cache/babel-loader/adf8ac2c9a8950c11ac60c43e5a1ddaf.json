{"ast":null,"code":"var url = require('url');\n\nvar urlJoin = require('url-join');\n\nvar http = require('http');\n\nvar ServerResponse = http.ServerResponse;\n\nvar WebSocketServer = require('ws').Server;\n\nvar wsServers = {};\n/**\n * @param {express.Application} app\n * @param {http.Server} [server]\n */\n\nmodule.exports = function (app, server) {\n  if (!server) {\n    server = http.createServer(app);\n\n    app.listen = function () {\n      return server.listen.apply(server, arguments);\n    };\n  }\n\n  function addSocketRoute(route, middleware, callback) {\n    var args = [].splice.call(arguments, 0);\n    var wsPath = urlJoin(app.mountpath, route);\n    if (args.length < 2) throw new SyntaxError('Invalid number of arguments');\n\n    if (args.length === 2) {\n      middleware = [middleware];\n    } else if (typeof middleware === 'object') {\n      middleware.push(callback);\n    } else {\n      middleware = args.slice(1);\n    }\n\n    var wss = new WebSocketServer({\n      server: server,\n      path: wsPath\n    });\n    wsServers[wsPath] = wss;\n    wss.on('connection', function (ws) {\n      var response = new ServerResponse(ws.upgradeReq);\n\n      response.writeHead = function (statusCode) {\n        if (statusCode > 200) ws.close();\n      };\n\n      ws.upgradeReq.method = 'ws';\n      app.handle(ws.upgradeReq, response, function (err) {\n        var idx = 0;\n\n        (function next(err) {\n          if (err) return;\n          var cur = middleware[idx++];\n\n          if (!middleware[idx]) {\n            cur(ws, ws.upgradeReq);\n          } else {\n            cur(ws.upgradeReq, response, next);\n          }\n        })(err);\n      });\n    });\n    return app;\n  }\n\n  ;\n  app.ws = addSocketRoute;\n  return {\n    app: app,\n    getWss: function (route) {\n      return wsServers[route];\n    }\n  };\n};","map":{"version":3,"names":["url","require","urlJoin","http","ServerResponse","WebSocketServer","Server","wsServers","module","exports","app","server","createServer","listen","apply","arguments","addSocketRoute","route","middleware","callback","args","splice","call","wsPath","mountpath","length","SyntaxError","push","slice","wss","path","on","ws","response","upgradeReq","writeHead","statusCode","close","method","handle","err","idx","next","cur","getWss"],"sources":["C:/Users/User/react-app/react-app/node_modules/express-ws/index.js"],"sourcesContent":["var url = require('url');\nvar urlJoin = require('url-join');\nvar http = require('http');\nvar ServerResponse = http.ServerResponse;\nvar WebSocketServer = require('ws').Server;\n\nvar wsServers = {};\n\n/**\n * @param {express.Application} app\n * @param {http.Server} [server]\n */\nmodule.exports = function (app, server) {\n  if(!server) {\n    server = http.createServer(app);\n\n    app.listen = function()\n    {\n      return server.listen.apply(server, arguments)\n    }\n  }\n\n  function addSocketRoute(route, middleware, callback) {\n    var args = [].splice.call(arguments, 0);\n    var wsPath = urlJoin(app.mountpath, route);\n\n    if (args.length < 2)\n      throw new SyntaxError('Invalid number of arguments');\n\n    if (args.length === 2) {\n      middleware = [middleware];\n    } else if (typeof middleware === 'object') {\n      middleware.push(callback);\n    } else {\n      middleware = args.slice(1);\n    }\n\n    var wss = new WebSocketServer({\n      server: server,\n      path: wsPath\n    });\n\n    wsServers[wsPath] = wss;\n\n    wss.on('connection', function(ws) {\n      var response = new ServerResponse(ws.upgradeReq);\n      response.writeHead = function (statusCode) {\n        if (statusCode > 200) ws.close();\n      };\n      ws.upgradeReq.method = 'ws';\n\n      app.handle(ws.upgradeReq, response, function(err) {\n        var idx = 0;\n        (function next (err) {\n          if (err) return;\n          var cur = middleware[idx++];\n          if (!middleware[idx]) {\n            cur(ws, ws.upgradeReq);\n          } else {\n            cur(ws.upgradeReq, response, next);\n          }\n        }(err));\n      });\n    });\n\n    return app;\n  };\n\n  app.ws = addSocketRoute;\n\n  return {\n    app: app,\n    getWss: function (route) {\n      return wsServers[route];\n    }\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}