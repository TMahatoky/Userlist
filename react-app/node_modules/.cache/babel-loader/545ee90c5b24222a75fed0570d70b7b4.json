{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst graphql = require('graphql');\n\nconst utils = require('./utils.js');\n\nfunction wrapResolverInMiddleware(resolver, middleware) {\n  return (parent, args, ctx, info) => middleware(function () {\n    let _parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : parent;\n\n    let _args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : args;\n\n    let _ctx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ctx;\n\n    let _info = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : info;\n\n    return resolver(_parent, _args, _ctx, _info);\n  }, parent, args, ctx, info);\n}\n\nfunction parseField(field) {\n  const {\n    isDeprecated,\n    ...restData\n  } = field;\n  const argsMap = field.args.reduce((acc, cur) => ({ ...acc,\n    [cur.name]: cur\n  }), {});\n  return { ...restData,\n    args: argsMap\n  };\n}\n\nfunction applyMiddlewareToField(field, options, middleware) {\n  const parsedField = parseField(field);\n\n  if (utils.isMiddlewareWithFragment(middleware) && parsedField.resolve && parsedField.resolve !== graphql.defaultFieldResolver) {\n    return { ...parsedField,\n      fragment: middleware.fragment,\n      fragments: middleware.fragments,\n      resolve: wrapResolverInMiddleware(parsedField.resolve, middleware.resolve)\n    };\n  } else if (utils.isMiddlewareWithFragment(middleware) && parsedField.subscribe) {\n    return { ...parsedField,\n      fragment: middleware.fragment,\n      fragments: middleware.fragments,\n      subscribe: wrapResolverInMiddleware(parsedField.subscribe, middleware.resolve)\n    };\n  } else if (utils.isMiddlewareResolver(middleware) && parsedField.resolve && parsedField.resolve !== graphql.defaultFieldResolver) {\n    return { ...parsedField,\n      resolve: wrapResolverInMiddleware(parsedField.resolve, middleware)\n    };\n  } else if (utils.isMiddlewareResolver(middleware) && parsedField.subscribe) {\n    return { ...parsedField,\n      subscribe: wrapResolverInMiddleware(parsedField.subscribe, middleware)\n    };\n  } else if (utils.isMiddlewareWithFragment(middleware) && !options.onlyDeclaredResolvers) {\n    return { ...parsedField,\n      fragment: middleware.fragment,\n      fragments: middleware.fragments,\n      resolve: wrapResolverInMiddleware(graphql.defaultFieldResolver, middleware.resolve)\n    };\n  } else if (utils.isMiddlewareResolver(middleware) && !options.onlyDeclaredResolvers) {\n    return { ...parsedField,\n      resolve: wrapResolverInMiddleware(graphql.defaultFieldResolver, middleware)\n    };\n  } else {\n    return { ...parsedField,\n      resolve: graphql.defaultFieldResolver\n    };\n  }\n}\n\nfunction applyMiddlewareToType(type, options, middleware) {\n  const fieldMap = type.getFields();\n\n  if (utils.isMiddlewareFunction(middleware)) {\n    const resolvers = Object.keys(fieldMap).reduce((resolvers2, fieldName) => ({ ...resolvers2,\n      [fieldName]: applyMiddlewareToField(fieldMap[fieldName], options, middleware)\n    }), {});\n    return resolvers;\n  } else {\n    const resolvers = Object.keys(middleware).reduce((resolvers2, field) => ({ ...resolvers2,\n      [field]: applyMiddlewareToField(fieldMap[field], options, middleware[field])\n    }), {});\n    return resolvers;\n  }\n}\n\nfunction applyMiddlewareToSchema(schema, options, middleware) {\n  const typeMap = schema.getTypeMap();\n  const resolvers = Object.keys(typeMap).filter(type => utils.isGraphQLObjectType(typeMap[type]) && !graphql.isIntrospectionType(typeMap[type])).reduce((resolvers2, type) => ({ ...resolvers2,\n    [type]: applyMiddlewareToType(typeMap[type], options, middleware)\n  }), {});\n  return resolvers;\n}\n\nfunction generateResolverFromSchemaAndMiddleware(schema, options, middleware) {\n  if (utils.isMiddlewareFunction(middleware)) {\n    return applyMiddlewareToSchema(schema, options, middleware);\n  } else {\n    const typeMap = schema.getTypeMap();\n    const resolvers = Object.keys(middleware).reduce((resolvers2, type) => ({ ...resolvers2,\n      [type]: applyMiddlewareToType(typeMap[type], options, middleware[type])\n    }), {});\n    return resolvers;\n  }\n}\n\nexports.generateResolverFromSchemaAndMiddleware = generateResolverFromSchemaAndMiddleware;","map":{"version":3,"names":["Object","defineProperty","exports","value","graphql","require","utils","wrapResolverInMiddleware","resolver","middleware","parent","args","ctx","info","_parent","_args","_ctx","_info","parseField","field","isDeprecated","restData","argsMap","reduce","acc","cur","name","applyMiddlewareToField","options","parsedField","isMiddlewareWithFragment","resolve","defaultFieldResolver","fragment","fragments","subscribe","isMiddlewareResolver","onlyDeclaredResolvers","applyMiddlewareToType","type","fieldMap","getFields","isMiddlewareFunction","resolvers","keys","resolvers2","fieldName","applyMiddlewareToSchema","schema","typeMap","getTypeMap","filter","isGraphQLObjectType","isIntrospectionType","generateResolverFromSchemaAndMiddleware"],"sources":["C:/Users/User/node_modules/graphql-middleware/dist/applicator.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst graphql = require('graphql');\nconst utils = require('./utils.js');\n\nfunction wrapResolverInMiddleware(resolver, middleware) {\n  return (parent, args, ctx, info) => middleware((_parent = parent, _args = args, _ctx = ctx, _info = info) => resolver(_parent, _args, _ctx, _info), parent, args, ctx, info);\n}\nfunction parseField(field) {\n  const { isDeprecated, ...restData } = field;\n  const argsMap = field.args.reduce((acc, cur) => ({\n    ...acc,\n    [cur.name]: cur\n  }), {});\n  return {\n    ...restData,\n    args: argsMap\n  };\n}\nfunction applyMiddlewareToField(field, options, middleware) {\n  const parsedField = parseField(field);\n  if (utils.isMiddlewareWithFragment(middleware) && parsedField.resolve && parsedField.resolve !== graphql.defaultFieldResolver) {\n    return {\n      ...parsedField,\n      fragment: middleware.fragment,\n      fragments: middleware.fragments,\n      resolve: wrapResolverInMiddleware(parsedField.resolve, middleware.resolve)\n    };\n  } else if (utils.isMiddlewareWithFragment(middleware) && parsedField.subscribe) {\n    return {\n      ...parsedField,\n      fragment: middleware.fragment,\n      fragments: middleware.fragments,\n      subscribe: wrapResolverInMiddleware(parsedField.subscribe, middleware.resolve)\n    };\n  } else if (utils.isMiddlewareResolver(middleware) && parsedField.resolve && parsedField.resolve !== graphql.defaultFieldResolver) {\n    return {\n      ...parsedField,\n      resolve: wrapResolverInMiddleware(parsedField.resolve, middleware)\n    };\n  } else if (utils.isMiddlewareResolver(middleware) && parsedField.subscribe) {\n    return {\n      ...parsedField,\n      subscribe: wrapResolverInMiddleware(parsedField.subscribe, middleware)\n    };\n  } else if (utils.isMiddlewareWithFragment(middleware) && !options.onlyDeclaredResolvers) {\n    return {\n      ...parsedField,\n      fragment: middleware.fragment,\n      fragments: middleware.fragments,\n      resolve: wrapResolverInMiddleware(graphql.defaultFieldResolver, middleware.resolve)\n    };\n  } else if (utils.isMiddlewareResolver(middleware) && !options.onlyDeclaredResolvers) {\n    return {\n      ...parsedField,\n      resolve: wrapResolverInMiddleware(graphql.defaultFieldResolver, middleware)\n    };\n  } else {\n    return { ...parsedField, resolve: graphql.defaultFieldResolver };\n  }\n}\nfunction applyMiddlewareToType(type, options, middleware) {\n  const fieldMap = type.getFields();\n  if (utils.isMiddlewareFunction(middleware)) {\n    const resolvers = Object.keys(fieldMap).reduce((resolvers2, fieldName) => ({\n      ...resolvers2,\n      [fieldName]: applyMiddlewareToField(fieldMap[fieldName], options, middleware)\n    }), {});\n    return resolvers;\n  } else {\n    const resolvers = Object.keys(middleware).reduce((resolvers2, field) => ({\n      ...resolvers2,\n      [field]: applyMiddlewareToField(fieldMap[field], options, middleware[field])\n    }), {});\n    return resolvers;\n  }\n}\nfunction applyMiddlewareToSchema(schema, options, middleware) {\n  const typeMap = schema.getTypeMap();\n  const resolvers = Object.keys(typeMap).filter((type) => utils.isGraphQLObjectType(typeMap[type]) && !graphql.isIntrospectionType(typeMap[type])).reduce((resolvers2, type) => ({\n    ...resolvers2,\n    [type]: applyMiddlewareToType(typeMap[type], options, middleware)\n  }), {});\n  return resolvers;\n}\nfunction generateResolverFromSchemaAndMiddleware(schema, options, middleware) {\n  if (utils.isMiddlewareFunction(middleware)) {\n    return applyMiddlewareToSchema(schema, options, middleware);\n  } else {\n    const typeMap = schema.getTypeMap();\n    const resolvers = Object.keys(middleware).reduce((resolvers2, type) => ({\n      ...resolvers2,\n      [type]: applyMiddlewareToType(typeMap[type], options, middleware[type])\n    }), {});\n    return resolvers;\n  }\n}\n\nexports.generateResolverFromSchemaAndMiddleware = generateResolverFromSchemaAndMiddleware;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}