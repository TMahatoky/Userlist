{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst utils = require('./utils.js');\n\nfunction validateMiddleware(schema, middleware) {\n  if (utils.isMiddlewareFunction(middleware)) {\n    return middleware;\n  }\n\n  const types = schema.getTypeMap();\n  Object.keys(middleware).forEach(type => {\n    if (!Object.keys(types).includes(type)) {\n      throw new MiddlewareError(`Type ${type} exists in middleware but is missing in Schema.`);\n    }\n\n    if (!utils.isMiddlewareFunction(middleware[type])) {\n      const fields = types[type].getFields();\n      Object.keys(middleware[type]).forEach(field => {\n        if (!Object.keys(fields).includes(field)) {\n          throw new MiddlewareError(`Field ${type}.${field} exists in middleware but is missing in Schema.`);\n        }\n\n        if (!utils.isMiddlewareFunction(middleware[type][field])) {\n          throw new MiddlewareError(`Expected ${type}.${field} to be a function but found ` + typeof middleware[type][field]);\n        }\n      });\n    }\n  });\n  return middleware;\n}\n\nclass MiddlewareError extends Error {}\n\nexports.MiddlewareError = MiddlewareError;\nexports.validateMiddleware = validateMiddleware;","map":{"version":3,"names":["Object","defineProperty","exports","value","utils","require","validateMiddleware","schema","middleware","isMiddlewareFunction","types","getTypeMap","keys","forEach","type","includes","MiddlewareError","fields","getFields","field","Error"],"sources":["C:/Users/User/node_modules/graphql-middleware/dist/validation.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst utils = require('./utils.js');\n\nfunction validateMiddleware(schema, middleware) {\n  if (utils.isMiddlewareFunction(middleware)) {\n    return middleware;\n  }\n  const types = schema.getTypeMap();\n  Object.keys(middleware).forEach((type) => {\n    if (!Object.keys(types).includes(type)) {\n      throw new MiddlewareError(`Type ${type} exists in middleware but is missing in Schema.`);\n    }\n    if (!utils.isMiddlewareFunction(middleware[type])) {\n      const fields = types[type].getFields();\n      Object.keys(middleware[type]).forEach((field) => {\n        if (!Object.keys(fields).includes(field)) {\n          throw new MiddlewareError(`Field ${type}.${field} exists in middleware but is missing in Schema.`);\n        }\n        if (!utils.isMiddlewareFunction(middleware[type][field])) {\n          throw new MiddlewareError(`Expected ${type}.${field} to be a function but found ` + typeof middleware[type][field]);\n        }\n      });\n    }\n  });\n  return middleware;\n}\nclass MiddlewareError extends Error {\n}\n\nexports.MiddlewareError = MiddlewareError;\nexports.validateMiddleware = validateMiddleware;\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,UAApC,EAAgD;EAC9C,IAAIJ,KAAK,CAACK,oBAAN,CAA2BD,UAA3B,CAAJ,EAA4C;IAC1C,OAAOA,UAAP;EACD;;EACD,MAAME,KAAK,GAAGH,MAAM,CAACI,UAAP,EAAd;EACAX,MAAM,CAACY,IAAP,CAAYJ,UAAZ,EAAwBK,OAAxB,CAAiCC,IAAD,IAAU;IACxC,IAAI,CAACd,MAAM,CAACY,IAAP,CAAYF,KAAZ,EAAmBK,QAAnB,CAA4BD,IAA5B,CAAL,EAAwC;MACtC,MAAM,IAAIE,eAAJ,CAAqB,QAAOF,IAAK,iDAAjC,CAAN;IACD;;IACD,IAAI,CAACV,KAAK,CAACK,oBAAN,CAA2BD,UAAU,CAACM,IAAD,CAArC,CAAL,EAAmD;MACjD,MAAMG,MAAM,GAAGP,KAAK,CAACI,IAAD,CAAL,CAAYI,SAAZ,EAAf;MACAlB,MAAM,CAACY,IAAP,CAAYJ,UAAU,CAACM,IAAD,CAAtB,EAA8BD,OAA9B,CAAuCM,KAAD,IAAW;QAC/C,IAAI,CAACnB,MAAM,CAACY,IAAP,CAAYK,MAAZ,EAAoBF,QAApB,CAA6BI,KAA7B,CAAL,EAA0C;UACxC,MAAM,IAAIH,eAAJ,CAAqB,SAAQF,IAAK,IAAGK,KAAM,iDAA3C,CAAN;QACD;;QACD,IAAI,CAACf,KAAK,CAACK,oBAAN,CAA2BD,UAAU,CAACM,IAAD,CAAV,CAAiBK,KAAjB,CAA3B,CAAL,EAA0D;UACxD,MAAM,IAAIH,eAAJ,CAAqB,YAAWF,IAAK,IAAGK,KAAM,8BAA1B,GAA0D,OAAOX,UAAU,CAACM,IAAD,CAAV,CAAiBK,KAAjB,CAArF,CAAN;QACD;MACF,CAPD;IAQD;EACF,CAfD;EAgBA,OAAOX,UAAP;AACD;;AACD,MAAMQ,eAAN,SAA8BI,KAA9B,CAAoC;;AAGpClB,OAAO,CAACc,eAAR,GAA0BA,eAA1B;AACAd,OAAO,CAACI,kBAAR,GAA6BA,kBAA7B"},"metadata":{},"sourceType":"script"}