{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst schema = require('@graphql-tools/schema');\n\nconst applicator = require('./applicator.js');\n\nconst validation = require('./validation.js');\n\nconst fragments = require('./fragments.js');\n\nconst utils = require('./utils.js');\n\nfunction addMiddlewareToSchema(schema$1, options, middleware) {\n  const validMiddleware = validation.validateMiddleware(schema$1, middleware);\n  const resolvers = applicator.generateResolverFromSchemaAndMiddleware(schema$1, options, validMiddleware);\n  const fragmentReplacements = fragments.extractFragmentReplacements(resolvers);\n  const newSchema = schema.addResolversToSchema({\n    schema: schema$1,\n    resolvers,\n    updateResolversInPlace: false,\n    resolverValidationOptions: {\n      requireResolversForResolveType: \"ignore\"\n    }\n  });\n  return {\n    schema: newSchema,\n    fragmentReplacements\n  };\n}\n\nfunction applyMiddlewareWithOptions(schema, options) {\n  for (var _len = arguments.length, middlewares = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    middlewares[_key - 2] = arguments[_key];\n  }\n\n  const normalisedMiddlewares = middlewares.map(middleware => {\n    if (utils.isMiddlewareGenerator(middleware)) {\n      return middleware.generate(schema);\n    } else {\n      return middleware;\n    }\n  });\n  const schemaWithMiddlewareAndFragmentReplacements = normalisedMiddlewares.reduceRight((_ref, middleware) => {\n    let {\n      schema: currentSchema,\n      fragmentReplacements: currentFragmentReplacements\n    } = _ref;\n    const {\n      schema: newSchema,\n      fragmentReplacements: newFragmentReplacements\n    } = addMiddlewareToSchema(currentSchema, options, middleware);\n    return {\n      schema: newSchema,\n      fragmentReplacements: [...currentFragmentReplacements, ...newFragmentReplacements]\n    };\n  }, {\n    schema,\n    fragmentReplacements: []\n  });\n  const schemaWithMiddleware = schemaWithMiddlewareAndFragmentReplacements.schema;\n  schemaWithMiddleware.schema = schemaWithMiddlewareAndFragmentReplacements.schema;\n  schemaWithMiddleware.fragmentReplacements = schemaWithMiddlewareAndFragmentReplacements.fragmentReplacements;\n  return schemaWithMiddleware;\n}\n\nfunction applyMiddleware(schema) {\n  for (var _len2 = arguments.length, middlewares = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    middlewares[_key2 - 1] = arguments[_key2];\n  }\n\n  return applyMiddlewareWithOptions(schema, {\n    onlyDeclaredResolvers: false\n  }, ...middlewares);\n}\n\nfunction applyMiddlewareToDeclaredResolvers(schema) {\n  for (var _len3 = arguments.length, middlewares = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    middlewares[_key3 - 1] = arguments[_key3];\n  }\n\n  return applyMiddlewareWithOptions(schema, {\n    onlyDeclaredResolvers: true\n  }, ...middlewares);\n}\n\nexports.addMiddlewareToSchema = addMiddlewareToSchema;\nexports.applyMiddleware = applyMiddleware;\nexports.applyMiddlewareToDeclaredResolvers = applyMiddlewareToDeclaredResolvers;","map":{"version":3,"names":["Object","defineProperty","exports","value","schema","require","applicator","validation","fragments","utils","addMiddlewareToSchema","schema$1","options","middleware","validMiddleware","validateMiddleware","resolvers","generateResolverFromSchemaAndMiddleware","fragmentReplacements","extractFragmentReplacements","newSchema","addResolversToSchema","updateResolversInPlace","resolverValidationOptions","requireResolversForResolveType","applyMiddlewareWithOptions","middlewares","normalisedMiddlewares","map","isMiddlewareGenerator","generate","schemaWithMiddlewareAndFragmentReplacements","reduceRight","currentSchema","currentFragmentReplacements","newFragmentReplacements","schemaWithMiddleware","applyMiddleware","onlyDeclaredResolvers","applyMiddlewareToDeclaredResolvers"],"sources":["C:/Users/User/node_modules/graphql-middleware/dist/middleware.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst schema = require('@graphql-tools/schema');\nconst applicator = require('./applicator.js');\nconst validation = require('./validation.js');\nconst fragments = require('./fragments.js');\nconst utils = require('./utils.js');\n\nfunction addMiddlewareToSchema(schema$1, options, middleware) {\n  const validMiddleware = validation.validateMiddleware(schema$1, middleware);\n  const resolvers = applicator.generateResolverFromSchemaAndMiddleware(schema$1, options, validMiddleware);\n  const fragmentReplacements = fragments.extractFragmentReplacements(resolvers);\n  const newSchema = schema.addResolversToSchema({\n    schema: schema$1,\n    resolvers,\n    updateResolversInPlace: false,\n    resolverValidationOptions: {\n      requireResolversForResolveType: \"ignore\"\n    }\n  });\n  return { schema: newSchema, fragmentReplacements };\n}\nfunction applyMiddlewareWithOptions(schema, options, ...middlewares) {\n  const normalisedMiddlewares = middlewares.map((middleware) => {\n    if (utils.isMiddlewareGenerator(middleware)) {\n      return middleware.generate(schema);\n    } else {\n      return middleware;\n    }\n  });\n  const schemaWithMiddlewareAndFragmentReplacements = normalisedMiddlewares.reduceRight(({\n    schema: currentSchema,\n    fragmentReplacements: currentFragmentReplacements\n  }, middleware) => {\n    const {\n      schema: newSchema,\n      fragmentReplacements: newFragmentReplacements\n    } = addMiddlewareToSchema(currentSchema, options, middleware);\n    return {\n      schema: newSchema,\n      fragmentReplacements: [\n        ...currentFragmentReplacements,\n        ...newFragmentReplacements\n      ]\n    };\n  }, { schema, fragmentReplacements: [] });\n  const schemaWithMiddleware = schemaWithMiddlewareAndFragmentReplacements.schema;\n  schemaWithMiddleware.schema = schemaWithMiddlewareAndFragmentReplacements.schema;\n  schemaWithMiddleware.fragmentReplacements = schemaWithMiddlewareAndFragmentReplacements.fragmentReplacements;\n  return schemaWithMiddleware;\n}\nfunction applyMiddleware(schema, ...middlewares) {\n  return applyMiddlewareWithOptions(schema, { onlyDeclaredResolvers: false }, ...middlewares);\n}\nfunction applyMiddlewareToDeclaredResolvers(schema, ...middlewares) {\n  return applyMiddlewareWithOptions(schema, { onlyDeclaredResolvers: true }, ...middlewares);\n}\n\nexports.addMiddlewareToSchema = addMiddlewareToSchema;\nexports.applyMiddleware = applyMiddleware;\nexports.applyMiddlewareToDeclaredResolvers = applyMiddlewareToDeclaredResolvers;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}