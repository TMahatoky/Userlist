{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withDefault = exports.flattenObjectOf = exports.isRuleFieldMap = exports.isRuleFunction = exports.isLogicRule = exports.isRule = void 0;\n\nconst rules_1 = require(\"./rules\");\n/**\n *\n * @param x\n *\n * Makes sure that a certain field is a rule.\n *\n */\n\n\nfunction isRule(x) {\n  return x instanceof rules_1.Rule || x && x.constructor && x.constructor.name === 'Rule';\n}\n\nexports.isRule = isRule;\n/**\n *\n * @param x\n *\n * Makes sure that a certain field is a logic rule.\n *\n */\n\nfunction isLogicRule(x) {\n  return x instanceof rules_1.LogicRule || x && x.constructor && (x.constructor.name === 'RuleOr' || x.constructor.name === 'RuleAnd' || x.constructor.name === 'RuleChain' || x.constructor.name === 'RuleRace' || x.constructor.name === 'RuleNot' || x.constructor.name === 'RuleTrue' || x.constructor.name === 'RuleFalse');\n}\n\nexports.isLogicRule = isLogicRule;\n/**\n *\n * @param x\n *\n * Makes sure that a certain field is a rule or a logic rule.\n *\n */\n\nfunction isRuleFunction(x) {\n  return isRule(x) || isLogicRule(x);\n}\n\nexports.isRuleFunction = isRuleFunction;\n/**\n *\n * @param x\n *\n * Determines whether a certain field is rule field map or not.\n *\n */\n\nfunction isRuleFieldMap(x) {\n  return typeof x === 'object' && Object.values(x).every(rule => isRuleFunction(rule));\n}\n\nexports.isRuleFieldMap = isRuleFieldMap;\n/**\n *\n * @param obj\n * @param func\n *\n * Flattens object of particular type by checking if the leaf\n * evaluates to true from particular function.\n *\n */\n\nfunction flattenObjectOf(obj, f) {\n  const values = Object.keys(obj).reduce((acc, key) => {\n    const val = obj[key];\n\n    if (f(val)) {\n      return [...acc, val];\n    } else if (typeof val === 'object' && !f(val)) {\n      return [...acc, ...flattenObjectOf(val, f)];\n    } else {\n      return acc;\n    }\n  }, []);\n  return values;\n}\n\nexports.flattenObjectOf = flattenObjectOf;\n/**\n *\n * Returns fallback is provided value is undefined\n *\n * @param fallback\n */\n\nfunction withDefault(fallback) {\n  return value => {\n    if (value === undefined) return fallback;\n    return value;\n  };\n}\n\nexports.withDefault = withDefault;","map":{"version":3,"mappings":";;;;;;;AACA;AAEA;;;;;;;;;AAOA,SAAgBA,MAAhB,CAAuBC,CAAvB,EAA6B;EAC3B,OACEA,CAAC,YAAYC,YAAb,IAAsBD,CAAC,IAAIA,CAAC,CAACE,WAAP,IAAsBF,CAAC,CAACE,WAAF,CAAcC,IAAd,KAAuB,MADrE;AAGD;;AAJDC;AAMA;;;;;;;;AAOA,SAAgBC,WAAhB,CAA4BL,CAA5B,EAAkC;EAChC,OACEA,CAAC,YAAYC,iBAAb,IACCD,CAAC,IACAA,CAAC,CAACE,WADH,KAEEF,CAAC,CAACE,WAAF,CAAcC,IAAd,KAAuB,QAAvB,IACCH,CAAC,CAACE,WAAF,CAAcC,IAAd,KAAuB,SADxB,IAECH,CAAC,CAACE,WAAF,CAAcC,IAAd,KAAuB,WAFxB,IAGCH,CAAC,CAACE,WAAF,CAAcC,IAAd,KAAuB,UAHxB,IAICH,CAAC,CAACE,WAAF,CAAcC,IAAd,KAAuB,SAJxB,IAKCH,CAAC,CAACE,WAAF,CAAcC,IAAd,KAAuB,UALxB,IAMCH,CAAC,CAACE,WAAF,CAAcC,IAAd,KAAuB,WAR1B,CAFH;AAYD;;AAbDC;AAeA;;;;;;;;AAOA,SAAgBE,cAAhB,CAA+BN,CAA/B,EAAqC;EACnC,OAAOD,MAAM,CAACC,CAAD,CAAN,IAAaK,WAAW,CAACL,CAAD,CAA/B;AACD;;AAFDI;AAIA;;;;;;;;AAOA,SAAgBG,cAAhB,CAA+BP,CAA/B,EAAqC;EACnC,OACE,OAAOA,CAAP,KAAa,QAAb,IACAQ,MAAM,CAACC,MAAP,CAAcT,CAAd,EAAiBU,KAAjB,CAAwBC,IAAD,IAAUL,cAAc,CAACK,IAAD,CAA/C,CAFF;AAID;;AALDP;AAOA;;;;;;;;;;AASA,SAAgBQ,eAAhB,CACEC,GADF,EAEEC,CAFF,EAEwB;EAEtB,MAAML,MAAM,GAAGD,MAAM,CAACO,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,CAA6B,CAACC,GAAD,EAAMC,GAAN,KAAa;IACvD,MAAMC,GAAG,GAAGN,GAAG,CAACK,GAAD,CAAf;;IACA,IAAIJ,CAAC,CAACK,GAAD,CAAL,EAAY;MACV,OAAO,CAAC,GAAGF,GAAJ,EAASE,GAAT,CAAP;IACD,CAFD,MAEO,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B,CAACL,CAAC,CAACK,GAAD,CAAjC,EAAwC;MAC7C,OAAO,CAAC,GAAGF,GAAJ,EAAS,GAAGL,eAAe,CAACO,GAAD,EAAML,CAAN,CAA3B,CAAP;IACD,CAFM,MAEA;MACL,OAAOG,GAAP;IACD;EACF,CATc,EASZ,EATY,CAAf;EAUA,OAAOR,MAAP;AACD;;AAfDL;AAiBA;;;;;;;AAMA,SAAgBgB,WAAhB,CAA+BC,QAA/B,EAA0C;EACxC,OAAQC,KAAD,IAAU;IACf,IAAIA,KAAK,KAAKC,SAAd,EAAyB,OAAOF,QAAP;IACzB,OAAOC,KAAP;EACD,CAHD;AAID;;AALDlB","names":["isRule","x","rules_1","constructor","name","exports","isLogicRule","isRuleFunction","isRuleFieldMap","Object","values","every","rule","flattenObjectOf","obj","f","keys","reduce","acc","key","val","withDefault","fallback","value","undefined"],"sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}